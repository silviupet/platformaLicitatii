<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
namespace App\Controller;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use App\Entity\Product;
use App\Form\ProductType;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;


class ProductController extends AbstractController {
    
/**
 * @Route("/product/new", name="app_product_new")
 * @param Request $request
 */    
    public function addProduct(Request $request){
        $product = new Product;
        $form = $this->createForm(ProductType::class,$product);
       
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            
/** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
//            $file = $request->getSession->get('userId');
            $file = 1;
            $product->setUserId($file);
            
            $file = $product->getProductTitle();
            $product->setProductTitle($file);
            
            $file = $product->getProductDescription();
            $product->setProductTitle($file);
            
            $file = $product->getPhotoA();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Photo_directory'),
                $fileName
            );
            $product->setPhotoA($fileName);

            $file = $product->getPhotoB();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Photo_directory'),
                $fileName
            );
            $product->setPhotoB($fileName);

            $file = $product->getPhotoC();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Photo_directory'),
                $fileName
            );
            $product->setPhotoC($fileName);
            
            $file = $product->getPhotoD();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Photo_directory'),
                $fileName
            );
            $product->setPhotoD($fileName);
            
            $file = $product->getPhotoE();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Photo_directory'),
                $fileName
            );
            $product->setPhotoE($fileName);
            
             $file = $product->getPhotoF();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('Photo_directory'),
                $fileName
            );
            $product->setPhotoF($fileName);
            
            $em=$this->getDoctrine()->getManager();
            $em->persist($product);
            $em->flush();
            
            
 
           return new Response ('product uploaded');


//            return $this->redirect($this->generateUrl('app_product_list'));
        }

        return $this->render('Products/addproducts.html.twig', array(
            'form' => $form->createView(),
        ));
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
       
